{"mappings":"AAkBA,SAASA,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,IAAIC,SAAQ,CAACC,EAASC,KACpBC,YAAW,KACLN,EACFI,EAAQG,QAAQC,IAAI,uBAAqBV,QAAiBC,QAExDM,EAAKE,QAAQC,IAAI,sBAAoBV,QAAeC,OAAW,GAElEA,EAAM,G,CA5BEU,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAuBC,GACrBA,EAAEC,iBAEF,MAAMC,EAAeF,EAAEG,OAAOC,SACxBC,EAAaC,OAAOJ,EAAaK,OAAOC,OAC9C,IAAIC,EAAYH,OAAOJ,EAAaf,MAAMqB,OAC1C,MAAME,EAAWJ,OAAOJ,EAAaS,KAAKH,OAE1C,IAAK,IAAII,EAAI,EAAGA,GAAKP,EAAYO,GAAK,EACpC3B,EAAc2B,EAAGH,GACjBA,GAAaC,C","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onClickSubmit);\n\nfunction onClickSubmit(e) {\n  e.preventDefault();\n\n  const formElements = e.target.elements;\n  const formAmount = Number(formElements.amount.value);\n  let formDelay = Number(formElements.delay.value);\n  const formStep = Number(formElements.step.value);\n\n  for (let i = 1; i <= formAmount; i += 1) {\n    createPromise(i, formDelay);\n    formDelay += formStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  new Promise((Fulfill, Reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        Fulfill(console.log(`✅ Fulfilled promise ${position} in ${delay}ms`));\n      } else {\n        Reject(console.log(`❌ Rejected promise ${position} in ${delay}ms`));\n      }\n    }, delay);\n  });\n}\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","Fulfill","Reject","setTimeout","console","log","document","querySelector","addEventListener","e","preventDefault","formElements","target","elements","formAmount","Number","amount","value","formDelay","formStep","step","i"],"version":3,"file":"03-promises.36dc7b9c.js.map"}